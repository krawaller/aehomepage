(function(){CATS.bb.HistoryView=CATS.bb.BaseView.extend({localizeid:"historyview",className:"historyview emptyhistory",events:{"click .startdelbutton":"startDelMode","click .stopdelbutton":"stopDelMode","click .togglesecond .davidlink":"deleteLink","click .togglesecond .nav-header > span":"deleteDay"},initialize:function(o){this.strings=[];this.listenTo(Backbone,"updatedhistory",this.render);this.listenTo(Backbone,"setlang",this.render);return this.constructor.__super__.initialize.apply(this,[o])},render:function(){this.setContent(CATS.cache.templates["#historyviewtemplate"],true,true);this.setUI("historyinstruction","historylist","togglebox");this.drawHistory();return this},drawHistory:function(){var arr,date,example,list,strings,_ref;arr=[];_ref=CATS.history;for(date in _ref){strings=_ref[date];if(!(date!=="all")){continue}for(example in strings){arr.push("<a href='#' class='davidlink expressionitem' data-date='"+date+"'>"+this.escapeStr(example)+"</a>")}arr.push("<h5 class='nav-header'><span>"+date+"</span></h5>")}if(arr.length){this.$el.removeClass("emptyhistory")}else{this.$el.addClass("emptyhistory")}list=$([].concat(arr.reverse().concat([])).join(""));return this.ui.historylist.html(list)},startDelMode:function(){return this.ui.togglebox.addClass("togglesecond")},stopDelMode:function(e){return this.ui.togglebox.removeClass("togglesecond")},historyName:function(){return"ALGEBRAEXPLORERCALCHIST-"+CATS.settings.lang+"-"+(CATS.settings.currentpupil||"AEDEFAULT")},deleteLink:function(e){var date,expr,link;link=$(e.currentTarget);date=link.attr("data-date");expr=link.text();e.preventDefault();e.stopPropagation();delete CATS.history[date][expr];if(Object.keys(CATS.history[date]).length===0){delete CATS.history[date]}localStorage.setItem(this.historyName(),JSON.stringify(CATS.history));return Backbone.trigger("updatedhistory")},deleteDay:function(e){var date,headline;headline=$(e.currentTarget);date=headline.text();e.preventDefault();e.stopPropagation();delete CATS.history[date];localStorage.setItem(this.historyName(),JSON.stringify(CATS.history));return Backbone.trigger("updatedhistory")}})}).call(this);