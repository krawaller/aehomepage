(function(){var Abs,And,BigNumber,Cbrt,Cube,DivTest,E,Eq,Err,FALSE,Frac,Fraction,Geq,Gt,I,IfElse,IntTest,IsMonFac,IsMonomial,Leq,Log,Lt,MAXDECNUM,Neg,Neq,Not,Num,OK,Or,PERCENT,PI,PlusMinus,Pow,Power,Prod,Product,Root,Sqrt,Square,Sum,TRUE,UNDEFINED,VarCount,arrsplit,deepcopy,div,exportTo,five,fixAssumptionPath,flipRel,four,funcs,getval,intersection,isErr,isOK,isbigger,k,listcheck,makeCheck,mapper,mixin,mult,numberofdecimals,one,opRel,plus,pow,printObj,three,trytocreate,two,v,x,y,z,zero,_ref;_ref=typeof require==="undefined"?this.CATS.math.toolhelpers:require("./toolhelpers"),VarCount=_ref.VarCount,IsMonFac=_ref.IsMonFac,IsMonomial=_ref.IsMonomial,fixAssumptionPath=_ref.fixAssumptionPath,opRel=_ref.opRel,flipRel=_ref.flipRel,IfElse=_ref.IfElse,DivTest=_ref.DivTest,IntTest=_ref.IntTest,Square=_ref.Square,Cube=_ref.Cube,PlusMinus=_ref.PlusMinus,Log=_ref.Log,Abs=_ref.Abs,PI=_ref.PI,Root=_ref.Root,Sqrt=_ref.Sqrt,Cbrt=_ref.Cbrt,arrsplit=_ref.arrsplit,E=_ref.E,I=_ref.I,PERCENT=_ref.PERCENT,intersection=_ref.intersection,UNDEFINED=_ref.UNDEFINED,deepcopy=_ref.deepcopy,isErr=_ref.isErr,isOK=_ref.isOK,mixin=_ref.mixin,Prod=_ref.Prod,Frac=_ref.Frac,Pow=_ref.Pow,Eq=_ref.Eq,Leq=_ref.Leq,Gt=_ref.Gt,Geq=_ref.Geq,Lt=_ref.Lt,Neq=_ref.Neq,four=_ref.four,five=_ref.five,And=_ref.And,Or=_ref.Or,Not=_ref.Not,TRUE=_ref.TRUE,FALSE=_ref.FALSE,makeCheck=_ref.makeCheck,x=_ref.x,y=_ref.y,z=_ref.z,Neg=_ref.Neg,Product=_ref.Product,Sum=_ref.Sum,Power=_ref.Power,Fraction=_ref.Fraction,Num=_ref.Num,zero=_ref.zero,one=_ref.one,two=_ref.two,three=_ref.three,Err=_ref.Err,OK=_ref.OK,printObj=_ref.printObj;BigNumber=typeof require==="undefined"?window.BigNumber:require("../../lib/bignumber");BigNumber.config({DECIMAL_PLACES:20,EXPONENTIAL_AT:[-2e3,2e3]});MAXDECNUM=10;getval=function(o,forcepos){var flip,ret;if(o.type==="negation"){flip=true;o=o.objs[0]}ret=BigNumber(o.val||o);if(flip&&!forcepos){ret.s*=-1}return ret};isbigger=function(o1,o2){return BigNumber(o1.val||o1).greaterThan(o2.val||o2)};trytocreate=function(val){var ret;ret={number:Num(BigNumber(val)),wasok:true};return ret};numberofdecimals=function(o){var num;num=BigNumber(o.val||o);return Math.max(0,num.c.length-num.e-1)};plus=function(o1,o2){var first,ret,second,sum;first=getval(o1);second=getval(o2);sum=first.plus(second);ret={result:Num(sum),outofbounds:false};return ret};mult=function(o1,o2){var first,prod,ret,second;first=BigNumber(o1.val||o1);second=BigNumber(o2.val||o2);prod=first.times(second).round(MAXDECNUM);ret={result:Num(prod.round(MAXDECNUM)),approx:!prod.equals(prod.round(MAXDECNUM)),outofbounds:false};return ret};pow=function(o1,o2){var ret;ret={result:Math.pow(parseFloat(o1.val||o1),parseFloat(o2.val||o1)),approx:false,outofbounds:false};return ret};div=function(o1,o2,forcepos){var denom,multback,numer,q,ret;numer=getval(o1,forcepos);denom=getval(o2,forcepos);q=numer.dividedBy(denom).round(MAXDECNUM);multback=denom.times(q);console.log("DID A DIV","numer",numer.c,"denom",denom.c,"roundedq",q.c,"multback",multback.c);ret={result:Num(q),approx:!numer.equals(multback),outofbounds:false};return ret};mapper={plus:plus,mult:mult,pow:pow,div:div};listcheck=function(list,method){var n,nextmash,r,ret;if(list==null){list=[]}if(list.length<2){return[]}r=list[0].num;ret=[list[0].pos];n=1;console.log("listchecking",list);nextmash=mapper[method](r,list[1].num);while(n<list.length-1&&!nextmash.outofbounds){console.log("liststep",n);r=nextmash.result;ret.push(list[n].pos);n++;nextmash=mapper[method](r,list[n].num)}console.log("wee result form listcheck",ret);return ret};if(typeof exports==="undefined"){exportTo=this.CATS.math}else{exportTo=exports}funcs={listcheck:listcheck,trytocreate:trytocreate,plus:plus,numberofdecimals:numberofdecimals,div:div,mult:mult,isbigger:isbigger,pow:pow};for(k in funcs){v=funcs[k];exportTo[k]=v}}).call(this);